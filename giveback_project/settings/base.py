"""
Django settings for giveback_project project.
Generated by 'django-admin startproject' using Django 1.8.
For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import logging
import os
import re

# import raven

from django.utils.translation import ugettext_lazy as _

from .env import env

BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from .logging_conf import LOGGING  # noqa
from .roadbull import * # noqa


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='CHANGEME')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=False)

ALLOWED_HOSTS = env(
    'ALLOWED_HOSTS', default=['www.hookcoffee.sg', 'hookcoffee.sg',
                              'www.hookcoffee.com.sg', 'hookcoffee.com.sg'])
INTERNAL_IPS = env('INTERNAL_IPS', default=[])

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.sites',
    'django_hstore',
    'django_countries',
    'adminsortable',
    'registration',
    'widget_tweaks',
    'compressor',
    'djangobower',
    'djrill',
    'django_extensions',
    'ckeditor',
    'ckeditor_uploader',
    'el_pagination',
    'webpack_loader',
    'raven.contrib.django.raven_compat',

    'customers',
    'customauth',
    'coffees',
    'get_started',
    'content',
    'wholesale',
    'loyale',
    'manager',
    'reminders',
    'blog',
    'metrics',
]

BOWER_INSTALLED_APPS = (
    'jquery#2.1.4',
    'jqueryui#1.11.4',
    'bootstrap-sass-official#3.3.6',
    'seiyria-bootstrap-slider#5.3.1',
    'components-font-awesome#4.5.0',
    'eonasdan-bootstrap-datetimepicker#latest',
    'moment#latest',
    'isotope#latest',
    'remarkable-bootstrap-notify#latest',
    'animate.css#latest'
)


MIDDLEWARE = (
    'raven.contrib.django.raven_compat.middleware.Sentry404CatchMiddleware',
    'raven.contrib.django.raven_compat.middleware.SentryResponseErrorIdMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'solid_i18n.middleware.SolidLocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

SITE_ID = 1

DEFAULT_FROM_EMAIL = 'Hook Coffee <hola@hookcoffee.com.sg>'

ROOT_URLCONF = 'giveback_project.urls'

AUTH_USER_MODEL = 'customauth.MyUser'

AUTHENTICATION_BACKENDS = (
    'customauth.models.FacebookBackend',
    'django.contrib.auth.backends.ModelBackend',
)

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_AUTO_LOGIN = True
# The page you want users to arrive at after they successful log in
LOGIN_REDIRECT_URL = '/accounts/profile/'
# The page users are directed to if they are not logged in,
# and are trying to access pages requiring authentication
LOGIN_URL = '/accounts/login/'

EMAIL_BACKEND = env(
    'EMAIL_BACKEND', default='djrill.mail.backends.djrill.DjrillBackend')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'giveback_project.context_processors.top_bar',
            ],
        },
    },
]

WSGI_APPLICATION = 'giveback_project.wsgi.application'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'djangobower.finders.BowerFinder',
    'compressor.finders.CompressorFinder',
)

COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'giveback_project.compressor_filters.PatchedSCSSCompiler'),
)
if DEBUG:
    COMPRESS_CSS_FILTERS = (
        'giveback_project.compressor_filters.CustomCssAbsoluteFilter',
    )
else:
    COMPRESS_CSS_FILTERS = (
        'giveback_project.compressor_filters.CustomCssAbsoluteFilter',
        'django_compressor_autoprefixer.AutoprefixerFilter',
    )

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('POSTGRES_DB'),
        'USER': env('POSTGRES_USER'),
        'PASSWORD': env('POSTGRES_PASSWORD'),
        'HOST': env('POSTGRES_HOST'),
        'PORT': env('POSTGRES_PORT'),
    },
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    },
    'compressor': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'compressor'
    }
}

if env('REDIS_CACHE_LOCATION'):
    CACHES['default'] = {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': env('REDIS_CACHE_LOCATION'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = (
    ('en', _('English')),
    ('zh-hans', _('Chinese')),  # Simplified Chinese
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

TIME_ZONE = 'Asia/Singapore'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Absolute path to the directory static files should be collected to.
STATIC_ROOT = env(
    'STATIC_ROOT',
    default=os.path.join(os.path.dirname(BASE_DIR), 'assets/static/'))
STATIC_URL = '/static/'
# Needs for some back-end features, when the system working in debug mode.
STATIC_PATH = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    STATIC_PATH,
)

# Absolute filesystem path to the directory that will hold user-uploaded files.
MEDIA_ROOT = env(
    'MEDIA_ROOT',
    default=os.path.join(os.path.dirname(BASE_DIR), 'assets/media/'))
MEDIA_URL = '/media/'

BOWER_COMPONENTS_ROOT = os.path.join(BASE_DIR, 'components')

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': 'dist/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack.manifest.app.json'),
        'POLL_INTERVAL': 1,
    },
    'MANAGER': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': 'dist/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack.manifest.manager.json'),
        'POLL_INTERVAL': 1,
    }
}

#  Django Compressor
COMPRESS_ENABLED = not DEBUG
if DEBUG:
    COMPRESS_DEBUG_TOGGLE = True
COMPRESS_CACHE_BACKEND = 'compressor'

SENTRY_DSN = env('SENTRY_DSN', default=None)
SENTRY_ENV = env('SENTRY_ENV', default='development')
# SENTRY_IGNORE_EXCEPTIONS = [
#     'stripe.error.CardError',
# ]
# https://docs.sentry.io/clients/python/integrations/django/#logging
IGNORABLE_404_URLS = (
    re.compile(r'\.(php|cgi)$'),
    re.compile(r'^/phpmyadmin/'),
    re.compile(r'undefinedpageWebRequestEvents.js$'),
)
if SENTRY_DSN:
    RAVEN_CONFIG = {
        'dsn': SENTRY_DSN,
        'environment': SENTRY_ENV,
        # 'ignore_exceptions': SENTRY_IGNORE_EXCEPTIONS,
        # 'release': raven.fetch_git_sha(os.path.dirname(os.pardir)),
        'CELERY_LOGLEVEL': logging.WARNING,
    }
else:
    RAVEN_CONFIG = {}

# Stripe
SECRET_KEY = env('STRIPE_SECRET_KEY')
PUBLISHABLE_KEY = env('STRIPE_PUBLISHABLE_KEY')

# Intercom
# FIXME: Must be replaced on Personal Access Tokens or OAuth by January 2017
INTERCOM_APP_ID = env('INTERCOM_APP_ID')
INTERCOM_API_KEY = env('INTERCOM_API_KEY')

# TypeForm
TYPEFORM_API_KEY = env('TYPEFORM_API_KEY')

# Mandrill
MANDRILL_API_KEY = env('MANDRILL_API_KEY')

# MailChimp
MAILCHIMP_USERNAME = env('MAILCHIMP_USERNAME')
MAILCHIMP_API_KEY = env('MAILCHIMP_API_KEY')
MAILCHIMP_DEFAULT_LIST = env('MAILCHIMP_DEFAULT_LIST')
MAILCHIMP_LEADS_SEGMENT = env('MAILCHIMP_LEADS_SEGMENT')
MAILCHIMP_ACTIVE_SEGMENT = env('MAILCHIMP_ACTIVE_SEGMENT')
MAILCHIMP_INACTIVE_SEGMENT = env('MAILCHIMP_INACTIVE_SEGMENT')

FB_PAGE_ID = '516095681887484'  # facebook.com/pg/hookcoffeesg
FB_PAGE_ACCESS_TOKEN = env('FB_PAGE_ACCESS_TOKEN')

EXCLUDE_COFFEES = [
    'Taster pack', 'Taster 3x80g', 'Taster 5x',
    'Shotpods Taster Pack', 'Discovery Pack']

GIFT_VOUCHERS = [
    'V60STARTER', '80GSTARTER', 'DRIPSTARTER',
    'SHOTPODSSTARTER', 'SCRUB', 'COFFEESCRUB',
    'AEROPRESS25', 'HUAT18',
]

GIFT_DISPLAY_NAMES = {
    'V60STARTER': 'V60 STARTER KIT',
    '80GSTARTER': '80G BAG',
    'DRIPSTARTER': '3 x DRIP COFFEE BAGS',
    'SHOTPODSSTARTER': 'SHOTPODS BOX',
    'HUAT18': 'HUAT 2018',
}

ADDRESS_PATH = env(
    'GENERATED_ADDRESSES_PATH',
    default=os.path.join(os.path.dirname(BASE_DIR), 'generated/addresses'))
LABELS_PATH = env(
    'GENERATED_LABELS_PATH',
    default=os.path.join(os.path.dirname(BASE_DIR), 'generated/labels'))

# Celery

CELERY_BROKER_URL = env('CELERY_BROKER_URL')
CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND')
CELERY_ALWAYS_EAGER = env('CELERY_ALWAYS_EAGER', default=False)
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# InfluxDB

INFLUXDB_HOST = env('INFLUXDB_HOST')
INFLUXDB_PORT = env('INFLUXDB_PORT')
INFLUXDB_USER = env('INFLUXDB_USER')
INFLUXDB_PASSWORD = env('INFLUXDB_PASSWORD')
INFLUXDB_APP_DB = env('INFLUXDB_APP_DB')


GEOIP_PATH = os.path.join(BASE_DIR, 'geoip_data')

from .ckeditor import *  # noqa

CKEDITOR_JQUERY_URL = '/static/assets/vendor/jquery-2.1.4.min.js'

REACTIVATION_TEMPLATES = [
    'A1', 'A2', 'A3', 'A4',
]

# Deprecated. Don't use it.
MAX_LABELS_IN_FILE = 50

# BurstSMS
BURSTSMS_API_URL = env('BURSTSMS_API_URL')
BURSTSMS_API_KEY = env('BURSTSMS_API_KEY')
BURSTSMS_API_SECRET = env('BURSTSMS_API_SECRET')
